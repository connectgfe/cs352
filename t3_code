#!/bin/bash

# File: test_code
# Author: Giulio Esposito
# Purpose: test any output differences in 2 c files

exec 2> /dev/null

if [ ! $1 ]
then
read proj myprojdir profprojdir testdir
fi

if [ $1 ] && [ ! $2 ]
then
proj=$1
read  myprojdir profprojdir testdir
fi

if [ $2 ] && [ ! $3 ]
then
proj=$1
myprojdir=$2
read profprojdir testdir
fi


if [ $3 ] && [ ! $4 ]
then
proj=$1
myprojdir=$2
profprojdir=$3
 read testdir
fi


if [ $4 ]
then
proj=$1
myprojdir=$2
profprojdir=$3
testdir=$4
fi

#fortest=_2anagrams2
myproj=$myprojdir/$proj
profproj=$profprojdir/ex_$proj

diffdir=diffdir/

if [ -z $proj ] || [ -z $myprojdir ] || [ -z $profprojdir ] || [ -z $testdir ]
then
echo not enough args
exit 1
fi



if [ ! -x  $myproj ] || [ ! -f  $myproj ] || [ !  -x $profproj ] || [ ! -f $profproj ] || [ !  -d $testdir ]
  then
 echo file/dir not found
 exit 1
fi

ls $testdir | grep $proj > tfile.txt 
val=$(wc -l < tfile.txt)
num=1

cat tfile.txt | while read line
do
testfile=$line
testfile2=$testdir/$testfile

out1=outa$num.txt
out2=outb$num.txt

# test for timeout
timeout 2s $myproj < $testfile2 > $out1
terr1=$?
if [ $terr1 -eq 124 ] 
then
echo ***testcase: $testfile [ FAILED : Program timed out ]
exit 1
fi

if [ $terr1 -ge 128 ] 
then 
echo ***testcase: $testfile [ FAILED : Abnormal termination ]
exit 1
fi

# test valgrind
valgrind $myproj < $testfile2 > t2_code_txt.txt 2>&1

memval=$( grep -c 'All heap blocks' t2_code_txt.txt)
errval=$( grep -c '0 errors from' t2_code_txt.txt)

#echo "free $memval err $errval"
if [ $memval -eq 0 ]
then
valmem=": valgrind reports memory leaks"
fi

if [ $errval -eq 0 ]
then
valerr=": valgrind reports memory errors"
fi



# test for RC
$myproj < $testfile2 > $out1
err1=$?
$profproj < $testfile2 > $out2
err2=$?

if [  $err1 -eq 1 ] && [ $err2 -eq 0 ]
  then
msgRC=": RC is not zero but reference RC is zero"
fi
if [  $err1 -eq 0 ] && [ $err2 -eq 1 ]
  then
msgRC=": RC is zero but reference RC is non-zero"
fi


diff $out1 $out2  > txt1.txt

if [ $? -eq 1 ]
  then
msgDiff=": stdout has diff"
fi

# print to stdout
if [ -z $msgRC ] && [ -z $msgDiff ] && [ -z $valmem ] && [ -z $valerr ]
then
 echo ***testcase: $testfile [ PASSED ]
else
echo ***testcase: $testfile [ FAILED $msgDiff $msgRC $valmem $valerr ]
fi

valmem=
valerr=
msgRc=
msgDiff=


((num++))
done





